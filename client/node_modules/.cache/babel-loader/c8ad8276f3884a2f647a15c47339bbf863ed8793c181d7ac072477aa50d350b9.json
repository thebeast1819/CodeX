{"ast":null,"code":"var _jsxFileName = \"/Users/swahimnamdev/Documents/WebDev/Code_Easy/client/src/components/Fileupload/Fileupload.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fileupload = props => {\n  let fileReader;\n  const handleFileRead = e => {\n    const content = fileReader.result;\n    console.log(fileReader.type);\n    console.log(content);\n    // … do something with the 'content' …\n    props.setCode(content);\n  };\n  const handleFileChosen = file => {\n    var extension = file.name.split('.').pop().toLowerCase();\n    console.log(extension);\n    switch (extension) {\n      case \"cpp\":\n        props.setSelectedLanguage(\"cpp\");\n        props.setMode(\"c_cpp\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"C++\", () => console.log(\"lang change socket event triggered\"));\n        }\n        break;\n      case \"c\":\n        props.setSelectedLanguage(\"cpp\");\n        props.setMode(\"c_cpp\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"C\", () => console.log(\"lang change socket event triggered\"));\n        }\n        break;\n      case \"java\":\n        props.setSelectedLanguage(\"java\");\n        props.setMode(\"java\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"Java\", () => console.log(\"lang change socket event triggered\"));\n        }\n        break;\n      case \"py\":\n        props.setSelectedLanguage(\"python\");\n        props.setMode(\"python\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"Python\", () => console.log(\"lang change socket event triggered\"));\n        }\n        break;\n      default:\n        return alert(\"Upload a file with correct extension\");\n        break;\n    }\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileupload\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"codefile\",\n      onChange: e => handleFileChosen(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_c = Fileupload;\nexport default Fileupload;\nvar _c;\n$RefreshReg$(_c, \"Fileupload\");","map":{"version":3,"names":["React","Fileupload","props","fileReader","handleFileRead","e","content","result","console","log","type","setCode","handleFileChosen","file","extension","name","split","pop","toLowerCase","setSelectedLanguage","setMode","socket","emit","alert","FileReader","onloadend","readAsText","target","files"],"sources":["/Users/swahimnamdev/Documents/WebDev/Code_Easy/client/src/components/Fileupload/Fileupload.js"],"sourcesContent":["import React from 'react';\n\nconst Fileupload = (props) => {\n    let fileReader;\n  \n  const handleFileRead = (e) => {\n      const content = fileReader.result;\n      console.log(fileReader.type)\n    console.log(content)\n    // … do something with the 'content' …\n      props.setCode(content);\n  };\n  \n  const handleFileChosen = (file) => {\n      var extension = file.name.split('.').pop().toLowerCase();\n      console.log(extension);\n      switch (extension) {      \n       case \"cpp\":\n        props.setSelectedLanguage(\"cpp\");\n        props.setMode(\"c_cpp\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"C++\", () =>\n            console.log(\"lang change socket event triggered\")\n          );\n        }\n        break;\n      case \"c\":\n        props.setSelectedLanguage(\"cpp\");\n        props.setMode(\"c_cpp\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\",\"C\", () =>\n            console.log(\"lang change socket event triggered\")\n          );\n        }\n        break;\n      case \"java\":\n        props.setSelectedLanguage(\"java\");\n        props.setMode(\"java\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"Java\", () =>\n            console.log(\"lang change socket event triggered\")\n          );\n        }\n        break;\n      case \"py\":\n        props.setSelectedLanguage(\"python\");\n        props.setMode(\"python\");\n        if (props.socket) {\n          props.socket.emit(\"sendLang\", \"Python\", () =>\n            console.log(\"lang change socket event triggered\")\n          );\n        }\n        break;\n      default: return(alert(\"Upload a file with correct extension\"))\n        break;\n      }\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n      fileReader.readAsText(file);\n      \n    };\n    \n\n\n    return (\n        <div className=\"fileupload\">\n            <input type=\"file\" name=\"codefile\"\n                onChange={\n                    (e) => handleFileChosen(e.target.files[0])}\n                    />\n        </div>\n    )\n\n}\n\nexport default Fileupload;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC1B,IAAIC,UAAU;EAEhB,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1B,MAAMC,OAAO,GAAGH,UAAU,CAACI,MAAM;IACjCC,OAAO,CAACC,GAAG,CAACN,UAAU,CAACO,IAAI,CAAC;IAC9BF,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpB;IACEJ,KAAK,CAACS,OAAO,CAACL,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMM,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,IAAIC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAACC,WAAW,EAAE;IACxDV,OAAO,CAACC,GAAG,CAACK,SAAS,CAAC;IACtB,QAAQA,SAAS;MAChB,KAAK,KAAK;QACTZ,KAAK,CAACiB,mBAAmB,CAAC,KAAK,CAAC;QAChCjB,KAAK,CAACkB,OAAO,CAAC,OAAO,CAAC;QACtB,IAAIlB,KAAK,CAACmB,MAAM,EAAE;UAChBnB,KAAK,CAACmB,MAAM,CAACC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MACnCd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAClD;QACH;QACA;MACF,KAAK,GAAG;QACNP,KAAK,CAACiB,mBAAmB,CAAC,KAAK,CAAC;QAChCjB,KAAK,CAACkB,OAAO,CAAC,OAAO,CAAC;QACtB,IAAIlB,KAAK,CAACmB,MAAM,EAAE;UAChBnB,KAAK,CAACmB,MAAM,CAACC,IAAI,CAAC,UAAU,EAAC,GAAG,EAAE,MAChCd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAClD;QACH;QACA;MACF,KAAK,MAAM;QACTP,KAAK,CAACiB,mBAAmB,CAAC,MAAM,CAAC;QACjCjB,KAAK,CAACkB,OAAO,CAAC,MAAM,CAAC;QACrB,IAAIlB,KAAK,CAACmB,MAAM,EAAE;UAChBnB,KAAK,CAACmB,MAAM,CAACC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,MACpCd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAClD;QACH;QACA;MACF,KAAK,IAAI;QACPP,KAAK,CAACiB,mBAAmB,CAAC,QAAQ,CAAC;QACnCjB,KAAK,CAACkB,OAAO,CAAC,QAAQ,CAAC;QACvB,IAAIlB,KAAK,CAACmB,MAAM,EAAE;UAChBnB,KAAK,CAACmB,MAAM,CAACC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,MACtCd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAClD;QACH;QACA;MACF;QAAS,OAAOc,KAAK,CAAC,sCAAsC,CAAC;QAC3D;IAAM;IAEVpB,UAAU,GAAG,IAAIqB,UAAU,EAAE;IAC7BrB,UAAU,CAACsB,SAAS,GAAGrB,cAAc;IACnCD,UAAU,CAACuB,UAAU,CAACb,IAAI,CAAC;EAE7B,CAAC;EAID,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,uBACvB;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,UAAU;MAC9B,QAAQ,EACHR,CAAC,IAAKO,gBAAgB,CAACP,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA;EACzC;IAAA;IAAA;IAAA;EAAA,QACR;AAGd,CAAC;AAAA,KAvEK3B,UAAU;AAyEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}