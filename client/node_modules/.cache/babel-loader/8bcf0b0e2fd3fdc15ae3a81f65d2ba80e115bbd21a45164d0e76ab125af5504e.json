{"ast":null,"code":"const baseURL = \"http://localhost:4000\";\nconst outputChange = (d, setOutput, socket) => {\n  console.log(\"output change triggered\");\n  if (d.stdout || d.stderr || d.err) {\n    setOutput(d.stdout || d.stderr || d.err);\n    if (socket) {\n      socket.emit(\"sendOutput\", d.stdout || d.stderr || d.err, () => {\n        console.log(\"ouput change socket event triggered\");\n      });\n    }\n  }\n};\nfunction handleCode(code, input, selectedLanguage, setOutput, socket) {\n  fetch(`${baseURL}/code`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    // credentials: \"include\",    //later uncomment it and add cors for server url later\n    body: JSON.stringify({\n      code: code,\n      input: input,\n      lang: selectedLanguage\n    })\n  }).then(res => {\n    if (res.ok === true) {\n      console.log(\"code execution was successful\");\n    } else {\n      console.log(\"error!!!\");\n    }\n    return res.json();\n  }).then(d => {\n    console.log(\"the output is\", d);\n    if (d.stdout || d.stderr || d.err) {\n      outputChange(d, setOutput, socket);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n}\nexport default handleCode;","map":{"version":3,"names":["baseURL","outputChange","d","setOutput","socket","console","log","stdout","stderr","err","emit","handleCode","code","input","selectedLanguage","fetch","method","headers","body","JSON","stringify","lang","then","res","ok","json","catch"],"sources":["/Users/swahimnamdev/Documents/WebDev/Code_Easy/client/src/assets/api/api.js"],"sourcesContent":["const baseURL = \"http://localhost:4000\";\n\nconst outputChange = (d, setOutput, socket) => {\n  console.log(\"output change triggered\");\n  if (d.stdout || d.stderr || d.err) {\n    setOutput(d.stdout || d.stderr || d.err);\n    if (socket) {\n      socket.emit(\"sendOutput\", d.stdout || d.stderr || d.err, () => {\n        console.log(\"ouput change socket event triggered\");\n      });\n    }\n  }\n};\n\nfunction handleCode(code, input, selectedLanguage, setOutput, socket) {\n  fetch(`${baseURL}/code`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    // credentials: \"include\",    //later uncomment it and add cors for server url later\n    body: JSON.stringify({\n      code: code,\n      input: input,\n      lang: selectedLanguage,\n    }),\n  })\n    .then((res) => {\n      if (res.ok === true) {\n        console.log(\"code execution was successful\");\n      } else {\n        console.log(\"error!!!\");\n      }\n      return res.json();\n    })\n    .then((d) => {\n      console.log(\"the output is\", d);\n      if (d.stdout || d.stderr || d.err) {\n        outputChange(d, setOutput, socket);\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport default handleCode;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,YAAY,GAAG,CAACC,CAAC,EAAEC,SAAS,EAAEC,MAAM,KAAK;EAC7CC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtC,IAAIJ,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACM,MAAM,IAAIN,CAAC,CAACO,GAAG,EAAE;IACjCN,SAAS,CAACD,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACM,MAAM,IAAIN,CAAC,CAACO,GAAG,CAAC;IACxC,IAAIL,MAAM,EAAE;MACVA,MAAM,CAACM,IAAI,CAAC,YAAY,EAAER,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACM,MAAM,IAAIN,CAAC,CAACO,GAAG,EAAE,MAAM;QAC7DJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACpD,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AAED,SAASK,UAAU,CAACC,IAAI,EAAEC,KAAK,EAAEC,gBAAgB,EAAEX,SAAS,EAAEC,MAAM,EAAE;EACpEW,KAAK,CAAE,GAAEf,OAAQ,OAAM,EAAE;IACvBgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACD;IACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZQ,IAAI,EAAEP;IACR,CAAC;EACH,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACC,EAAE,KAAK,IAAI,EAAE;MACnBnB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB;IACA,OAAOiB,GAAG,CAACE,IAAI,EAAE;EACnB,CAAC,CAAC,CACDH,IAAI,CAAEpB,CAAC,IAAK;IACXG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,CAAC,CAAC;IAC/B,IAAIA,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACM,MAAM,IAAIN,CAAC,CAACO,GAAG,EAAE;MACjCR,YAAY,CAACC,CAAC,EAAEC,SAAS,EAAEC,MAAM,CAAC;IACpC;EACF,CAAC,CAAC,CACDsB,KAAK,CAAEjB,GAAG,IAAK;IACdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;EAClB,CAAC,CAAC;AACN;AAEA,eAAeE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}